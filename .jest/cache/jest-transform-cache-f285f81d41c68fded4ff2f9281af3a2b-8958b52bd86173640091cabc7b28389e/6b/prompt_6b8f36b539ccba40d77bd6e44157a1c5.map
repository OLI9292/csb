{"version":3,"sources":["prompt.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;AAAA,8B;AACA,kD;AACA,6C;AAWA,IAAA,SAAA,aAAA,UAAA,MAAA,EAAA;AAAoC,cAAA,MAAA,EAAA,MAAA;AAClC,aAAA,MAAA,CAAY,KAAZ,EAAwB;AAAxB,YAAA,QACE,OAAA,IAAA,CAAA,IAAA,EAAM,KAAN,KAAY,IADd;AAEE,cAAK,KAAL,GAAa,EAAb;;AACD;AAED,WAAA,SAAA,CAAA,MAAA,GAAA,YAAA;AACQ,YAAA,KAAA,KAAA,KAAA,CACJ,SAAA,GAAA,MADI,CAEJ,kBAAA,GAAA,eAFI;AAKN,YAAM,OAAO,UAAC,GAAD,EAAc,SAAd,EAAkC,CAAlC,EAA2C,CAAK,OAAA,gBAAA,aAAA,CAAC,IAAD,EAAK,EAChE,KAAK,CAD2D,EAEhE,WAAW,SAFqD,EAAL,EAG1D,OAAO,CAAC,GAAD,EAAK,GAAL,EAAS,GAAT,EAAa,GAAb,EAAkB,OAAlB,CAA0B,GAA1B,IAAiC,CAAjC,GAAqC,EAArC,GAHmD,GAG1D,CAH0D,CAAA,CAItD,CAJP;AAMA,YAAM,gBAAgB,UAAC,GAAD,EAAW,CAAK,OAAA;AACnC,eADmC,CAC/B,UAAC,CAAD,EAAI,CAAJ,EAAK,CAAK,OAAA,KAAK,EAAE,KAAP,EAAwB,EAAE,SAA1B,EAAA,CAAA,CAAA,CADqB,CAAA,CAAA,CAC8B,CADpE;AAGA,YAAM,UAAU;AACZ;AACE,sBAAc,KAAK,KAAL,CAAW,MAAzB,CADF;AAEE,sBAAc,CAAC,EAAE,OAAO,IAAT,EAAD,CAAd,CAFF;AAGE,sBAAc,CAAC,EAAE,OAAO,IAAT,EAAD,CAAd,CAHF;AAIE,sBAAc,KAAK,KAAL,CAAW,eAAzB,CAJF,CADY;;AAOZ,sBAAc,KAAK,KAAL,CAAW,MAAzB,CAPJ;AASA,eACE,gBAAA,aAAA,CAAC,aAAD,EAAc,IAAd;AACE,wBAAA,aAAA,CAAC,IAAD,EAAK,EACH,WAAW,KADR,EAAL,EAEG,OAFH,CADF,CADF;AAQD,KAhCD;AAiCF,WAAA,MAAA;AAAC,CAvCD,CAAoC,gBAAM,SAA1C,CAAA,C;;AAyCA,IAAM,gBAAgB,iBAAO,IAAP,CAAW,qBAAA,mBAAA,qBAAA,CAAA,4DAAA,CAAA,EAAA,CAAA,4DAAA,CAAA,CAAA,CAAX,CAAtB;AAUA,IAAM,OAAO,iBAAO,IAAP,CAAW,qBAAA,mBAAA,qBAAA,CAAA,8DAAA,EAAA,cAAA,EAAA,KAAA,CAAA,EAAA,CAAA,8DAAA,EAG6E,cAH7E,EAI0C,KAJ1C,CAAA,CAAA,CAAX,EAGI,UAAC,CAAD,EAAa,CAAK,OAAA,EAAE,SAAF,GAAc,uBAAd,GAAA,0BAAA,CAAkE,CAHxF,EAIF,UAAC,CAAD,EAAa,CAAK,OAAA,EAAE,SAAF,GAAc,eAAO,MAArB,GAAA,OAAA,CAAqC,CAJrD,CAAb","sourcesContent":["import React from 'react'\nimport styled from \"styled-components/native\"\nimport { colors, lighten10l } from '../../../lib/colors'\nimport { Animated } from \"react-native\"\n\nexport interface Props {\n  ref: React.RefObject<Prompt>,\n  prompt: any[],\n  secondaryPrompt: any[]\n}\n\ninterface State {}\n\nexport default class Prompt extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props)\n    this.state = {}\n  } \n\n  render() {\n    const {\n      prompt,\n      secondaryPrompt\n    } = this.props\n\n    const text = (str: string, highlight: boolean, i: number) => <Text\n      key={i}\n      highlight={highlight}>\n      {str + ([\"?\",\".\",\",\",\";\"].indexOf(str) > 0 ? \"\" : \" \")}\n    </Text>\n\n    const convertToText = (arr: any[]) => arr\n      .map((p, i) => text(p.value as string, p.highlight as boolean, i))\n\n    const prompts = secondaryPrompt\n      ? [\n          convertToText(this.props.prompt),\n          convertToText([{ value: \"\\n\" }]),\n          convertToText([{ value: \"\\n\" }]),\n          convertToText(this.props.secondaryPrompt)\n        ]\n      : convertToText(this.props.prompt)\n\n    return (\n      <ContainerView>\n        <Text\n          highlight={false}>\n          {prompts}\n        </Text>\n      </ContainerView>\n    )\n  }\n}\n\nconst ContainerView = styled.View`\n  flex: 2;\n  width: 100%;\n  justify-content: center;\n`;\n\ninterface TextProps {\n  highlight: boolean\n}\n\nconst Text = styled.Text`\n  text-align: center;\n  font-size: 20px;\n  font-family: ${(p: TextProps) => p.highlight ? \"BrandonGrotesque-Bold\" : \"BrandonGrotesque-Regular\"};\n  color: ${(p: TextProps) => p.highlight ? colors.yellow : \"black\"};\n`;\n"],"sourceRoot":""}